package org.exoplatform.selenium.platform.wiki.functional.information;

import static org.exoplatform.selenium.TestLogger.info;

import org.exoplatform.selenium.Button;
import org.exoplatform.selenium.Dialog;
import org.exoplatform.selenium.ManageAlert;
import org.exoplatform.selenium.Utils;
import org.exoplatform.selenium.platform.ManageAccount;
import org.exoplatform.selenium.platform.NavigationToolbar;
import org.exoplatform.selenium.platform.social.ManageMember;
import org.exoplatform.selenium.platform.wiki.BasicAction;
import org.openqa.selenium.By;
import org.testng.annotations.*;
/**
 * @date 13 May 2014
 */
public class Wiki_PageInformation_RelatedPage_Delete_Rename extends BasicAction{

	ManageAccount acc;
	Dialog dialog;
	Button button;	
	ManageMember mMember;	
	NavigationToolbar nav; 

	@BeforeMethod
	public void beforeMethod(){
		initSeleniumTest();
		driver.get(plfURL);
		driver.manage().window().maximize();
		acc = new ManageAccount(driver,this.plfVersion);
		dialog = new Dialog(driver);
		alert = new ManageAlert(driver, this.plfVersion);
		button = new Button(driver, this.plfVersion);	
		mMember = new ManageMember(driver, this.plfVersion);
		nav = new NavigationToolbar(driver, this.plfVersion);
		acc.signIn(DATA_USER1,DATA_PASS);;		
	}

	@AfterMethod
	public void afterMethod(){
		driver.manage().deleteAllCookies();
		driver.quit();
	}

	/**
	 * Case ID:118194
	 * Test Case Name: Renaming a page from another space should correctly be updated in Page Info Layout of a related page.
	 * Pre-Condition: User is member of Space 1, Space 2, Space 3
		Wiki of "Space 1" has following pages:
		- Page 1
		- Page 2

		Wiki of "Space 2" has following pages:
		- Page A
		- Page B

		Wiki of "Space 3" has following pages:
		- Page a
		- Page b

		"Page 1 " of "Space 1" wiki has relations with:
		-- "Page A" from "Space 2"
		-- "Page a" from "Space 3"
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/05/13 17:34:46
	 */
	@Test
	public  void test01_RenamingAPageFromAnotherSpaceShouldCorrectlyBeUpdatedInPageInfoLayoutOfARelatedPage() {
		info("Test 1: Renaming a page from another space should correctly be updated in Page Info Layout of a related page");
		String space1 = "Space"+getRandomNumber();		
		String space2 = "Space"+getRandomNumber();	
		String title1 = "Page 1";
		String title2 = "Page A";
		String title3 = "Page B";
		String titleUpdate = "Page A Renamed";
		String wikiPath = "Wiki Home";

		//Pre-Condition: 
		info("Create all space and page");
		mMember.goToAllSpaces();
		mMember.addNewSpace(space2, "");
		mMember.accessSpace(space2);
		mMember.goToSpaceMenu("Wiki");
		addBlankWikiPage(title2, title2, 0);
		Utils.pause(1000);
		click(By.linkText("Wiki Home"));
		Utils.pause(1000);		
		addBlankWikiPage(title3, title3, 0);

		mMember.goToAllSpaces();
		mMember.addNewSpace(space1, "");
		mMember.accessSpace(space1);
		mMember.goToSpaceMenu("Wiki");
		addBlankWikiPage(title1, title1, 0);
		Utils.pause(1000);

		info("Add Relations of page1");
		mMember.accessSpace(space1);
		mMember.goToSpaceMenu("Wiki");
		click(By.linkText(title1));
		addRelatedPage(wikiPath, title2, space2, true);
		Utils.pause(500);

		/*Step 1:
		  - Go to "Page A" of "Space 2" wiki
		 *Expected Outcome: - Wiki is displaying "Page A".		*/
		mMember.accessSpace(space2);
		mMember.goToSpaceMenu("Wiki");
		click(By.linkText(title2));

		/*Step 2: 
		 *Input Data: - Rename "Page A" to "Page A renamed"
		 *Expected Outcome: - Title of the wiki page is now "Page A renamed" 		*/
		editWikiPage(titleUpdate, titleUpdate, 0);

		/*Step 3: 
		 *Input Data: - Go to "Page 1 " of "Space 1" wiki
		 *Expected Outcome: - Wiki is displaying "Page 1"	*/
		mMember.accessSpace(space1);
		mMember.goToSpaceMenu("Wiki");
		click(By.linkText(title1));

		/*Step 4: 
		 *Input Data: 
		- Open "More" Menu
		- Select "Page Info"
		 *Expected Outcome: - Page infos of Page 1 are diplayed		*/
		goToPageInfo(null, wikiPath);
		Utils.pause(1000);

		/*Step 5: 
		 *Input Data: - Check updates in Related pages
		 *Expected Outcome: - Title of "Page A" has been correctly renamed "Page A renamed"	*/ 
		waitForAndGetElement(ELEMENT_RELATED_PAGE.replace("${relatedPage}", titleUpdate));

		//Delete data test
		mMember.goToAllSpaces();
		mMember.deleteSpace(space1,300000);
		Utils.pause(3000);
		mMember.deleteSpace(space2,300000);	
	}

	/**
	 * Case ID:118195
	 * Test Case Name: Renaming a Space should be correctly updated in Page Info Layout of a related page
	 * Pre-Condition: User is member of Space 1, Space 2, Space 3

		Wiki of "Space 1" has following pages:
		- Page 1
		- Page 2

		Wiki of "Space 2" has following pages:
		- Page A
		- Page B

		Wiki of "Space 3" has following pages:
		- Page a
		- Page b

		"Page 1 " of "Space 1" wiki has relations with:
		-- "Page A" from "Space 2"
		-- "Page a" from "Space 3"
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2014/05/13 17:34:46
	 */
	@Test
	public  void test02_RenamingASpaceShouldBeCorrectlyUpdatedInPageInfoLayoutOfARelatedPage() {
		info("Test 2: Renaming a Space should be correctly updated in Page Info Layout of a related page");
		String space1 = "Space"+getRandomNumber();		
		String space2 = "Space"+getRandomNumber();		
		String title1 = "Page 1";
		String title2 = "Page A";
		String wikiPath = "Wiki Home";
		String spaceUpdate = "Space Update";

		//Pre-Condition: 
		info("Create all space and page");
		mMember.goToAllSpaces();
		mMember.addNewSpace(space2, "");
		mMember.accessSpace(space2);
		mMember.goToSpaceMenu("Wiki");
		addBlankWikiPage(title2, title2, 0);
		Utils.pause(1000);

		mMember.goToAllSpaces();
		mMember.addNewSpace(space1, "");
		mMember.accessSpace(space1);
		mMember.goToSpaceMenu("Wiki");
		addBlankWikiPage(title1, title1, 0);
		Utils.pause(1000);

		info("Add Relations of page1");
		mMember.accessSpace(space1);
		mMember.goToSpaceMenu("Wiki");
		click(By.linkText(title1));
		addRelatedPage(wikiPath, title2, space2, true);
		Utils.pause(500);

		/*Step 1:
		 *Input Data: 	- Go to "Space 3"
		 *Expected Outcome: - Activity stream of "Space 3" is displayed	*/				
		/*Step 2: 
		 *Input Data: 
		- Go to "Space Management"
		- Renamed "Space 3" to "Space 3 renamed"
		 *Expected Outcome: - Space has been renamed to "Space 3 renamed"		*/
		mMember.goToAllSpaces();
		mMember.editSpace(space2, spaceUpdate, "", false, "");

		/*Step 3: 
		 *Input Data: - Go to "Page 1 " of "Space 1" wiki
		 *Expected Outcome: - Wiki is displaying "Page 1"		*/
		mMember.accessSpace(space1);
		mMember.goToSpaceMenu("Wiki");
		click(By.linkText(title1));

		/*Step 4: 
		 *Input Data: 
		- Open "More" Menu
		- Select "Page Info"
		 *Expected Outcome: - Page infos of Page 1 are diplayed	*/
		goToPageInfo(null, wikiPath);
		Utils.pause(1000);

		/*Step 5: 
		 *Input Data: - Check updates in Related pages
		 *Expected Outcome: - Wiki of "Page a" is "Space 3 renamed"	*/ 
		waitForAndGetElement(By.xpath(ELEMENT_RELATED_PAGE_SPACE.replace("${spaceName}", spaceUpdate)));

		//Delete data test
		mMember.goToAllSpaces();
		mMember.deleteSpace(space1,300000);
		Utils.pause(3000);
		mMember.deleteSpace(spaceUpdate,300000);	
	}

	/**
	 * Qmetry ID: 118183
	 * Case ID 03
	 * <Delete page/li>
	 * Step 1: Create new pages
	 * Step 2: Add related page
	 * Step 3: Delete related page
	 */
	@Test
	public void test03_DeletePage(){
		String[][] pageInfo = {{"Page118183_1", "Page118183_2"}, {"content of page1", "content of page2"}};
		String[][] wikiPath = {{"Wiki Home", "Wiki Home"}, {"Wiki Home/Page118183_1", "Wiki Home/Page118183_2"}};
		addBlankWikiPageAndRelatePage(2, wikiPath[0], pageInfo, 0, wikiPath[1][0], pageInfo[0][1]);
		removeRelatedPage(true, true, null, pageInfo[0][1]);
		deleteWikiPage(wikiPath[1]);
	}

	/**
	 * Qmetry ID: 118183
	 * Case ID 04
	 * Delete related page when cancel confirm message
	 * Step 1: Create new pages
	 * Step 2: Add related page
	 * Step 3: Delete related page
	 */
	@Test
	public void test04_DeleteRelatedPageWhenCancelConfirmMessage(){
		String[][] pageInfo = {{"relatedPage04_1", "relatedPage04_2"}, {"content of page1", "content of page2"}};
		String[][] wikiPath = {{"Wiki Home", "Wiki Home"}, {"Wiki Home/relatedPage04_1", "Wiki Home/relatedPage04_2"}};
		addBlankWikiPageAndRelatePage(2, wikiPath[0], pageInfo, 0, wikiPath[1][0], pageInfo[0][1]);
		removeRelatedPage(false, true, null, pageInfo[0][1]);
		deleteWikiPage(wikiPath[1]);
	}

	/**
	 * Qmetry ID: 118184
	 * Case ID 05
	 * Delete related page when user does not have permission to edit page
	 * Step 1: Create new pages
	 * Step 2: Add related page
	 * Step 3: Delete related page
	 */
	@Test
	public void test05_DeleteRelatedPageWhenUserDoesNotHavePermissionToEditPage(){
		String[][] pageInfo = {{"relatedPage05_1", "relatedPage05_2"}, {"content of page1", "content of page2"}};
		String[][] wikiPath = {{"Wiki Home", "Wiki Home"}, {"Wiki Home/relatedPage05_1", "Wiki Home/relatedPage05_2"}};
		boolean[] editInfo = {true, false, false};
		addBlankWikiPageAndEditPagePermissions(2, wikiPath[0], pageInfo, 0, editInfo, "any", 2);
		addRelatedPage(wikiPath[1][1], pageInfo[0][0]);
		goToPageInfo(ManageAccount.userType.AUTHOR, wikiPath[1][1]);
		waitForElementNotPresent(ELEMENT_REMOVE_RELATED_PAGE_LINK.replace("${relatedPage}", pageInfo[0][0]));
		resetDataByDeleteWikiPage(ManageAccount.userType.ADMIN, wikiPath[1]);
	}
}
