package  org.exoplatform.selenium.platform.plf.functional.homepageactivitystream.activitystream.activityfilter;

import static org.exoplatform.selenium.TestLogger.info;

import org.exoplatform.selenium.Utils;
import org.exoplatform.selenium.platform.HomePageActivity;
import org.exoplatform.selenium.platform.ManageAccount;
import org.exoplatform.selenium.platform.ManageAccount.userType;
import org.exoplatform.selenium.platform.NavigationToolbar;
import org.exoplatform.selenium.platform.social.Activity;
import org.exoplatform.selenium.platform.social.ManageMember;
import org.exoplatform.selenium.platform.social.PeopleConnection;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.testng.annotations.*;

/**
 * @author chinhdtt
 *
 */
public class PLF_HomepageActivityStream_ActivityStream_ActivityFilter_Others extends Activity{
	ManageAccount acc; 
	HomePageActivity home;
	NavigationToolbar nav; 
	PeopleConnection pConn; 
	ManageMember mMember; 
	String user = "John Smith";
	String user1= "Jack Miller";	

	@BeforeMethod
	public void beforeMethods(){	
		initSeleniumTest();
		driver.get(baseUrl);
		acc = new ManageAccount(driver, this.plfVersion);
		home = new HomePageActivity(driver, this.plfVersion);
		nav = new NavigationToolbar(driver, this.plfVersion);	
		pConn = new PeopleConnection(driver, this.plfVersion);
		mMember = new ManageMember(driver, this.plfVersion);
		acc.signIn(DATA_USER1, DATA_PASS);		
	}

	@AfterMethod
	public void afterMethods() {
		info("Logout portal");
		driver.manage().deleteAllCookies();
		driver.quit();
	}

	/**
	 * Case ID:77659.
	 * Test Case Name: Check show Activity posted from Home in "Connection" and "My Activities".
	 * Pre-Condition: 
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2013/12/25 15:05:51
	 */
	@Test
	public  void test01_CheckShowActivityPostedFromHomeInConnectionAndMyActivities() {
		info("Test 1: Check show Activity posted from Home in Connection and My Activities");
		String text = "Activity 77659";
		/*
		- Connect to Intranet
		- Post an activity in the stream [My activities]
		 *Input Data: 
		 *Expected Outcome: The activity is added to the stream "My activities"		*/
		selectFileter("My Activities");
		addActivity(true, text, false, "");
		waitForAndGetElement(home.ELEMENT_ACTIVITY.replace("${activityText}",text));
		/*
		- Back to the homepage
		- Switch to the stream [Connections]
		 *Input Data: 
		 *Expected Outcome: 
		- The activity posted in the stream "My activities" isn't displayed in the stream "Connections"		*/ 
		selectFileter("Connections");
		waitForElementNotPresent(home.ELEMENT_ACTIVITY.replace("${activityText}",text));

		//delete data
		selectFileter("All Activities");
		Utils.pause(1000);
		home.deleteActivity(text);
	}

	/**
	 * Case ID:77660.
	 * Test Case Name: Display the list of filters.
	 * Pre-Condition: 
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2013/12/25 15:05:51
	 */
	@Test
	public  void test02_DisplayTheListOfFilters() {
		info("Test 2: Display the list of filters");
		/*
		- Connect to Intranet/Homepage
		- Click on the arrow of the box "All activities"
		 *Input Data: 
		 *Expected Outcome: The list of all streams is displayed: "All Activities, Connections, My spaces and My activities"		*/ 
		waitForAndGetElement(ELEMENT_ACTIVITY_FILTER_CURRENT.replace("${filterOption}", "All Activities"));	
		click(ELEMENT_ACTIVITY_DROPDOWN,2);
		waitForAndGetElement(ELEMENT_ACTIVITY_FILTER_OPTION.replace("${filterOption}", "Connections"));
		waitForAndGetElement(ELEMENT_ACTIVITY_FILTER_OPTION.replace("${filterOption}", "My Spaces"));
		waitForAndGetElement(ELEMENT_ACTIVITY_FILTER_OPTION.replace("${filterOption}", "My Activities")); 
	}

	/**
	 * Case ID:77668.
	 * Test Case Name: Mention member that is not a connection in space should push the activity in "My Activities" and "My Spaces" of the mentioned user.
	 * Pre-Condition: User A and User B are member in the same spaceUser A and User B aren't connected in Intranet
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2013/12/25 15:05:51
	 */
	@Test
	public  void test03_MentionMemberThatIsNotAConnectionInSpaceShouldPushTheActivityInMyActivitiesAndMySpacesOfTheMentionedUser() {
		info("Test 3: Mention member that is not a connection in space should push the activity in My Activities and My Spaces of the mentioned user");
		String spaceName = "Space77668";

		/*
		- Connect to Intranet/Homepage with User A
		- Open a space, post an activity and mention the User B
		 *Input Data: 
		 *Expected Outcome: The activity is added in the activity stream "My spaces"		*/
		mMember.goToMySpacePage();
		mMember.addNewSpace(spaceName, "");
		mentionActivity(true,"",user1);
		goToMembers(spaceName);
		mMember.inviteSingleUser(userType.DEVELOPER);
		nav.goToHomePage();
		selectFileter("My Spaces");
		waitForAndGetElement(home.ELEMENT_ACTIVITY.replace("${activityText}", user1));
		acc.signOut();

		/*
		- Connect to Intranet/Homepage with User B
		- Open the stream [My activities]
		 *Input Data: 
		 *Expected Outcome: The activity where the user A has mentioned the user B is displayed in the stream "My activities" of the user B		*/
		acc.userSignIn(userType.DEVELOPER);
		mMember.acceptInvitation(spaceName);
		nav.goToHomePage();
		selectFileter("My Activities");
		waitForAndGetElement(home.ELEMENT_ACTIVITY.replace("${activityText}",user1));
		/*switch to the stream [My spaces]
		 *Input Data: 
		 *Expected Outcome: The activity is displayed in the stream "My spaces" of user B.		*/ 
		selectFileter("My Spaces");
		waitForAndGetElement(home.ELEMENT_ACTIVITY.replace("${activityText}",user1));
		acc.signOut();

		//delete data
		acc.userSignIn(userType.ADMIN);
		mMember.goToAllSpaces();
		mMember.deleteSpace(spaceName,300000);
	}

	/**
	 * Case ID:77681.
	 * Test Case Name: Like  an activity of someone else.
	 * Pre-Condition: User A and User B are not connected
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2013/12/25 15:05:51
	 */
	@Test
	public  void test04_LikeAnActivityOfSomeoneElse() {
		info("Test 4: Like  an activity of someone else");
		String text = "Activity 77681";
		nav.goToHomePage();
		addActivity(true, text, false,"");
		acc.signOut();
		/*
		- Connect to Intranet/Homepage
		- Click [Connections]
		- Select an user in list and click name of it
		- Choose [Activities Stream]click [Like] to an activity posted 
		 *Input Data: 
		 *Expected Outcome: 
		- The "Like" is added to the activity		*/
		acc.userSignIn(userType.DEVELOPER);
		nav.goToConnectionPage();
		waitForAndGetElement(pConn.ELEMENT_PEOPLE_SEARCH.replace("${peopleName}", user));
		click(pConn.ELEMENT_PEOPLE_SEARCH.replace("${peopleName}", user));
		waitForAndGetElement(ELEMENT_MY_ACTIVITY_STREAM_TAB);
		click(ELEMENT_MY_ACTIVITY_STREAM_TAB);
		Utils.pause(500);
		home.likeOrUnlikeActivity(text);
		/*
		- Back to the homepage
		- Switch to the stream [My activities]
		 *Input Data: 
		 *Expected Outcome: The activity liked is displayed in the stream "My activities"*/ 
		nav.goToHomePage();
		selectFileter("My Activities");
		waitForAndGetElement(home.ELEMENT_ACTIVITY.replace("${activityText}",text));
		acc.signOut();

		//delete data
		acc.userSignIn(userType.ADMIN);
		home.deleteActivity(text);
	}

	/**
	 * Case ID:77686.
	 * Test Case Name: Check show Activity posted from Homepage in All Activities, Connections and My Activities.
	 * Pre-Condition: 
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2013/12/25 15:05:51
	 */
	@Test
	public  void test05_CheckShowActivityPostedFromHomepageInAllActivitiesConnectionsAndMyActivities() {
		info("Test 5: Check show Activity posted from Homepage in All Activities, Connections and My Activities");
		String text = "Activity 77686";
		/*
		- Connect to Intranet/Homepage
		- In the "Shared box", add an activity
		 *Input Data: 
		 *Expected Outcome: The activity is displayed in the stream "All activities"		*/
		addActivity(true, text, false,"");		
		/*
		- Select the stream [All Activity]
		 *Input Data: 
		 *Expected Outcome: The activity is displayed in the stream "All activities"		*/
		selectFileter("All Activities");
		waitForAndGetElement(home.ELEMENT_ACTIVITY.replace("${activityText}",text));		
		/*
		- Select the stream [Connections]
		 *Input Data: 
		 *Expected Outcome: The activity isn't displayed in the stream "Connections"		*/
		selectFileter("Connections");
		waitForElementNotPresent(home.ELEMENT_ACTIVITY.replace("${activityText}",text));
		/*
		- Select the stream [My activities]
		 *Input Data: 
		 *Expected Outcome: The activity is displayed in the stream "My activities"		*/ 
		selectFileter("My Activities");
		waitForAndGetElement(home.ELEMENT_ACTIVITY.replace("${activityText}",text));

		//delete data
		selectFileter("All Activities");
		Utils.pause(1000);
		home.deleteActivity(text);
	}

	/**
	 * Case ID:77687.
	 * Test Case Name: Activity posted from a space should be visible in My Spaces, My Activities and All Activities.
	 * Pre-Condition: 
	- Have an space
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2013/12/25 15:05:51
	 */
	@Test
	public  void test06_ActivityPostedFromASpaceShouldBeVisibleInMySpacesMyActivitiesAndAllActivities() {
		info("Test 6: Activity posted from a space should be visible in My Spaces, My Activities and All Activities");
		String spaceName = "Space776877";
		String text = "Activitity 776877";
		/*
		- Connect to Intranet
		- Open a space
		- In the "Shared box", add an activity
		 *Input Data: 
		 *Expected Outcome: The activity is displayed in the stream of the space		*/
		mMember.goToMySpacePage();
		mMember.addNewSpace(spaceName, ""); 
		addActivity(true, text, false,"");
		/*
		- Back to homepage
		- Select the stream [My spaces]
		 *Input Data: 
		 *Expected Outcome: The activity is displayed in the stream space		*/
		nav.goToHomePage();
		selectFileter("My Spaces");
		waitForAndGetElement(home.ELEMENT_ACTIVITY.replace("${activityText}",text));
		/*
		- Select the stream [Connections]
		 *Input Data: 
		 *Expected Outcome: The activity isn't displayed in the stream "Connections"		*/
		selectFileter("Connections");
		waitForElementNotPresent(home.ELEMENT_ACTIVITY.replace("${activityText}",text));
		/*
		- Select the stream [My activities]
		 *Input Data: 
		 *Expected Outcome: The activity is displayed in the stream "My activities"		*/
		selectFileter("My Activities");
		waitForAndGetElement(home.ELEMENT_ACTIVITY.replace("${activityText}",text));
		/*
		- Select the stream [All activities]
		 *Input Data: 
		 *Expected Outcome: The activity is displayed in the stream "All activities"		*/ 
		selectFileter("All Activities");
		waitForAndGetElement(home.ELEMENT_ACTIVITY.replace("${activityText}",text));
		Utils.pause(1000);
		//delete data
		home.deleteActivity(text);
		mMember.goToAllSpaces();
		mMember.deleteSpace(spaceName,300000);
	}

	/**
	 * Case ID:77688.
	 * Test Case Name: System remembers selected stream accross sessions.
	 * Pre-Condition: 
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2013/12/25 15:05:51
	 */
	@Test
	public  void test07_SystemRemembersSelectedStreamAccrossSessions() {
		info("Test 7: System remembers selected stream accross sessions");
		String filterOption = "My Activities";
		/*
		- Connect to Intranet
		- Choose a filter different from default filter
		 *Input Data: 
		 *Expected Outcome: The streamchoosen is displayed		*/
		selectFileter(filterOption);
		acc.signOut();
		/*
		- Logout/Login
		 *Input Data: 
		 *Expected Outcome: The choosen stream is displayed in Intranet		*/ 
		acc.userSignIn(userType.ADMIN);
		waitForAndGetElement(ELEMENT_ACTIVITY_FILTER_CURRENT.replace("${filterOption}", filterOption), DEFAULT_TIMEOUT, 0);
	}

	/**
	 * Case ID:77691.
	 * Test Case Name: Display the dropdown list of stream in Home page activity stream.
	 * Pre-Condition: 
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2013/12/25 15:05:51
	 */
	@Test
	public  void test08_DisplayTheDropdownListOfStreamInHomePageActivityStream() {
		info("Test 8: Display the dropdown list of stream in Home page activity stream");
		/*
		- Connect to Intranet
		 *Input Data: 
		 *Expected Outcome: 
		- The Homepage activity stream is displayed
		- The dropdown list of stream is displayed		*/ 
		waitForAndGetElement(ELEMENT_ACTIVITY_FILTER_CURRENT.replace("${filterOption}", "All Activities"));	
	}

	/**
	 * Case ID:77695.
	 * Test Case Name: Open activity stream of other user.
	 * Pre-Condition: User A and User are not connected in Intranet
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2013/12/25 15:05:51
	 */
	@Test
	public  void test09_OpenActivityStreamOfOtherUser() {
		info("Test 9: Open activity stream of other user");
		String text = "Activity 77695";
		nav.goToHomePage();
		addActivity(true, text, false,"");
		acc.signOut();
		/*
		- Connect to Intranet with user A
		- Click on the name of the user B
		- Go to "Activity stream"
		 *Input Data: 
		 *Expected Outcome: 
		- The activity stream of the user B is displayed
		- The composer isn't displayed		*/ 
		acc.userSignIn(userType.DEVELOPER);
		nav.goToConnectionPage();
		waitForAndGetElement(pConn.ELEMENT_PEOPLE_SEARCH.replace("${peopleName}", user));
		click(pConn.ELEMENT_PEOPLE_SEARCH.replace("${peopleName}", user));
		waitForAndGetElement(ELEMENT_MY_ACTIVITY_STREAM_TAB);
		click(ELEMENT_MY_ACTIVITY_STREAM_TAB);
		waitForElementNotPresent(home.ELEMENT_ACTIVITY_TEXTBOX);
		acc.signOut();

		//delete data
		acc.userSignIn(userType.ADMIN);
		home.deleteActivity(text);
	}

	/**
	 * Case ID:77697.
	 * Test Case Name: Display the composer on activity stream of a connected user.
	 * Pre-Condition: User A and User are connected
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by chinhdtt at 2013/12/25 15:05:51
	 */
	@Test
	public  void test10_DisplayTheComposerOnActivityStreamOfAConnectedUser() {
		info("Test 10 Display the composer on activity stream of a connected user");
		String text = "Activity 77697";
		nav.goToConnectionPage();
		pConn.connectPeople(user1);
		acc.userSignIn(userType.DEVELOPER);
		pConn.acceptInvitation(user);
		/*
		- Connect to Intranet with user A
		- Click on the name of the user B
		- Go to "Activities stream"
		 *Input Data: 
		 *Expected Outcome: 
		- The activity stream of the user B is displayed
		- The composer is displayed		*/
		nav.goToConnectionPage();
		waitForAndGetElement(pConn.ELEMENT_PEOPLE_SEARCH.replace("${peopleName}", user));
		click(pConn.ELEMENT_PEOPLE_SEARCH.replace("${peopleName}", user));
		waitForAndGetElement(ELEMENT_MY_ACTIVITY_STREAM_TAB);
		click(ELEMENT_MY_ACTIVITY_STREAM_TAB);
		WebElement inputText = waitForAndGetElement(home.ELEMENT_ACTIVITY_TEXTBOX);
		/*
		- Post some activities on user B's activity stream
		 *Input Data: 
		 *Expected Outcome: 
		- All activities posted by user A are well displayed on user B's activity stream		*/		
		WebElement shareButton = waitForAndGetElement(ELEMENT_SHARE_BUTTON);
		((JavascriptExecutor)driver).executeScript("arguments[0].textContent = '"+text+"';", inputText);
		((JavascriptExecutor)driver).executeScript("arguments[0].disabled = false;", shareButton);
		((JavascriptExecutor)driver).executeScript("arguments[0].className = 'pull-right btn btn-primary';", shareButton);
		waitForAndGetElement(ELEMENT_SHARE_BUTTON);
		info("----Click share button----");
		click(ELEMENT_SHARE_BUTTON);
		Utils.pause(1000);
		nav.goToHomePage();
		waitForAndGetElement(home.ELEMENT_ACTIVITY.replace("${activityText}",text));
		acc.signOut();
		acc.userSignIn(userType.ADMIN);
		nav.goToHomePage();
		waitForAndGetElement(home.ELEMENT_ACTIVITY.replace("${activityText}",text));
		acc.signOut();

		//delete data
		acc.userSignIn(userType.DEVELOPER);
		home.deleteActivity(text);
		nav.goToConnectionPage();
		pConn.removeConnection(user);
	}
}