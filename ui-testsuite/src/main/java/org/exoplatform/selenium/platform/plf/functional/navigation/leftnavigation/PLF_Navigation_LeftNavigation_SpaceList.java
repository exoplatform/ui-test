package org.exoplatform.selenium.platform.plf.functional.navigation.leftnavigation;

import static org.exoplatform.selenium.TestLogger.info;

import org.exoplatform.selenium.platform.ManageAccount;
import org.exoplatform.selenium.platform.NavigationManagement;
import org.exoplatform.selenium.platform.NavigationToolbar;
import org.exoplatform.selenium.platform.UserGroupManagement;
import org.exoplatform.selenium.platform.social.ManageMember;
import org.exoplatform.selenium.platform.social.SocialBase;
import org.exoplatform.selenium.platform.social.SpaceManagement;
import org.exoplatform.selenium.platform.social.SpaceSearch;
import org.openqa.selenium.By;
import org.testng.annotations.*;


	/**
	* @author lientm
	* @date 13/05/2014
	*/
	public class PLF_Navigation_LeftNavigation_SpaceList extends SocialBase {
		ManageAccount acc; 
		NavigationToolbar nav; 
		NavigationManagement mNav; 
		SpaceManagement space;
		ManageAccount account;
		UserGroupManagement userMag;
		ManageMember member;
		SpaceSearch spaceS;

		@BeforeMethod
		public void beforeMethods(){	
			initSeleniumTest();
			acc = new ManageAccount(driver);
			nav = new NavigationToolbar(driver);
			mNav = new NavigationManagement(driver, this.plfVersion);
			space = new SpaceManagement(driver);
			account = new ManageAccount(driver);
			userMag = new UserGroupManagement(driver);
			member = new ManageMember(driver);
			spaceS = new SpaceSearch(driver);
			
			acc.signIn(DATA_USER1, DATA_PASS);		
		}

		@AfterMethod
		public void afterMethods() {
			info("Logout");
			driver.manage().deleteAllCookies();
			driver.quit();
		}
		
		public boolean checkExitScrollBarOnMySpace(){
			return checkExitScrollBar(ELEMENT_SPACE_NAVIGATION_ON_MY_SPACE);
		}
		
		public void addNewSpaceInMySpaceList(String spaceName){
			space.goToMySpacePage();
			space.addNewSpace(spaceName , "Description", "Visible", "Open", "", "", 300000);
			waitForAndGetElement(ELEMENT_MY_SPACE_PORTLET);
			waitForAndGetElement(ELEMENT_SPACE_IN_TOP_MY_SPACE_LIST.replace("${space}", spaceName));
		}
	/**
	*<li> Case ID:104129.</li>
	*<li> Test Case Name: Display list of spaces ordered by the last browsed.</li>
	*<li> Pre-Condition: </li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by lientm at 2014/05/13 10:21:08</li>
	*/
	@Test
	public void test01_DisplaySpacesOrderedByTheLastBrowsed() {
		String spaceName1 = "space104129a";
		String spaceName2 = "space104129b";
		String spaceName3 = "space104129c";
		
		info("Test 1: Display list of spaces ordered by the last browsed");
		/*Step Number: 1
		*Step Name: 
		*Step Description: 
			- Connect to Intranet
			- Create 3 spaces with name aaa, bbb, ccc
		*Input Data: 
		*Expected Outcome: 
			- The Left Navigation is displayed
			- The "MY SPACES" panel is displayed
			- Spaces are listed*/
		addNewSpaceInMySpaceList(spaceName1);
		addNewSpaceInMySpaceList(spaceName2);
		addNewSpaceInMySpaceList(spaceName3);

		/*Step number: 2
		*Step Name: 
		*Step Description: 
			- Open a space from the list, eg bbb
		*Input Data: 	
		*Expected Outcome: 
			- The space bbb is opened*/
		click(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", spaceName2));
		waitForAndGetElement(space.ELEMENT_SPACE_CURRENT_NAME.replace("${spaceName}", spaceName2));

		/*Step number: 3
		*Step Name: 
		*Step Description: 
			- Back to the homepage
		*Input Data: 
		*Expected Outcome: 
			- The page is refreshed
			- In "MY SPACES" The bbb space jumps to the top of the list*/
		waitForAndGetElement(ELEMENT_SPACE_IN_TOP_MY_SPACE_LIST.replace("${space}", spaceName2));

		/*Step number: 4
		*Step Name: 
		*Step Description: 
			- Open another space from the list, eg ccc
			- Back to the homepage
		*Input Data: 	
		*Expected Outcome: 
			- The space ccc is opened
			- The page is refreshed
			- In "MY SPACES" The ccc space jumps to the top of the list*/ 
		click(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", spaceName1));
		waitForAndGetElement(space.ELEMENT_SPACE_CURRENT_NAME.replace("${spaceName}", spaceName1));
		nav.goToHomePage();
		waitForAndGetElement(ELEMENT_SPACE_IN_TOP_MY_SPACE_LIST.replace("${space}", spaceName1));

		info("Delete data");
		goToMySpacePage();
		space.deleteSpace(spaceName1, 300000);
		space.deleteSpace(spaceName2, 300000);
		space.deleteSpace(spaceName3, 300000);
 	}

	/**
	*<li> Case ID:104130 -> Test Case Name: Display 10 spaces in the list.</li>
	*<li> Case ID:104132 -> Test Case Name: Display 10 more spaces in the list MY SPACES</li>
	*<li> Case ID:104133 -> Test Case Name: Remove the button "See XX More Spaces" </li>
	*<li> Case ID:104141 -> Test Case Name: Search a space when [See XX More Spaces] button is displayed </li>
	*/
	@Test
	public void test02_03_04_05_DisplayMoreSpacesInTheList() {
		String user = "test104130";
		String password = "123456";
		String spaceName1 = "space104130";
		String spaceName2 = "space104132";
		String inputSearch = "space10413";
		
		info("create new user to test");
		nav.goToNewStaff();
		account.addNewUserAccount(user, password, password, "test", "test", user, user + "@gmail.com", null, null, true);
		acc.signOut();	
		acc.signIn(user, password);
		
		info("Case 104130: Display 10 spaces in the list");
		/*	- The number of space is played is 10
			- A vertical scroll bar isn't displayed*/ 
		for (int i = 0; i < 10; i ++){
			addNewSpaceInMySpaceList(spaceName1 + i);
		}	
		info("Check scroll bar is not displayed");
		assert checkExitScrollBarOnMySpace();

		info("Case 104132: Display 10 more spaces in the list MY SPACES");
		/* Create 12 space
		  	- The number of spaces displayed is 10
			- The button "See 2 More Spaces" is displayed in the bottom of the list
			- Click "See 2 More Spaces" -> 12 space is displayed with vertical scroll bar 
		 */
		for (int i = 0; i < 2; i ++){
			addNewSpaceInMySpaceList(spaceName2 + i);		}
		info("In my space portlet just displays 10 space");
		int count1 = driver.findElements(ELEMENT_SPACE_LINE_ON_MY_SPACE).size();
		assert count1 == 10;
		click(ELEMENT_SHOW_MORE_SPACE.replace("${No}", "2"));
		for (int i = 0; i < 10; i ++){
			waitForAndGetElement(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", spaceName1 + i));
		}
		for (int i = 0; i < 2; i ++){
			waitForAndGetElement(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", spaceName2 + i));
		}
		int count2 = driver.findElements(ELEMENT_SPACE_LINE_ON_MY_SPACE).size();
		assert count2 == 12;
		assert !checkExitScrollBarOnMySpace();
		
		info("Case 104133: Remove the button See XX More Spaces");
		waitForElementNotPresent(ELEMENT_SHOW_MORE_SPACE.replace("${No}", "2"));
		
		info("CaseId: 104141 -> Search a space when [See XX More Spaces] button is displayed");
		nav.goToHomePage();
		waitForAndGetElement(ELEMENT_SHOW_MORE_SPACE.replace("${No}", "2"));
		type(ELEMENT_MY_SPACE_SEARCH_BOX, inputSearch, true);
		int count5 = driver.findElements(ELEMENT_SPACE_LINE_ON_MY_SPACE).size();
		assert count5 == 12;
		waitForElementNotPresent(ELEMENT_SHOW_MORE_SPACE.replace("${No}", "2"));
		
		info("Delete data");
		acc.signOut();
		acc.signIn(DATA_USER1, DATA_PASS);
		nav.goToUsersAndGroupsManagement();
		userMag.searchUser(user, "User Name");
		userMag.deleteUser(user);
 	}
	
	/**
	*<li> Case ID:104134 -> Test Case Name: Ordering of never seen spaces.</li>
	*<li> Case ID:104139 -> Test Case Name: Ordering of searched spaces.</li>
	* refer issue PLF-5907
	*/
	@Test
	public void test06_07_OrderingOfNeverSeenSpaces() {
		String user1 = "test1041341";
		String user2 = "test1041342";
		String password = "123456";
		String spaceName1 = "space104134";
		String[] abc = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "k"};
		
		info("Case 104134: Ordering of never seen spaces");	
		info("create new user to test");
		nav.goToNewStaff();
		account.addNewUserAccount(user1, password, password, "test", "test", user1, user1 + "@gmail.com", null, null, true);
		account.addNewUserAccount(user2, password, password, "test", "test", user2, user2 + "@gmail.com", null, null, true);
		acc.signOut();	
		acc.signIn(user1, password);
		info("Create 10 space with user1 with open registration");
		for (int i = 0; i < 10; i ++){
			addNewSpaceInMySpaceList(spaceName1 + abc[i]);		
		}
		acc.signOut();

		acc.signIn(user2, password);
		for (int i = 0; i < 10; i ++){
			member.joinOpenSpace(spaceName1 + abc[i]);
			nav.goToHomePage();
			waitForAndGetElement(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", spaceName1 + abc[i]));		
		}
		int count = driver.findElements(ELEMENT_SPACE_LINE_ON_MY_SPACE).size();
		assert count == 10;
		
		/*	- Open spaces in turn except random 3 spaces (keep 3 spaces never to be opened)
			- These 3 spaces is put at the end of the list by ordering them alphabetically.*/ 
		for (int i = 10; i < 8; i ++){
			click(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", spaceName1 + abc[i]));
			waitForAndGetElement(space.ELEMENT_SPACE_CURRENT_NAME.replace("${spaceName}", spaceName1 + abc[i]));
			waitForAndGetElement(ELEMENT_SPACE_IN_TOP_MY_SPACE_LIST.replace("${space}", spaceName1 + abc[i]));
		}
		waitForAndGetElement(ELEMENT_SPACE_POSITION_IN_MY_SPACE_LIST.replace("${space}", spaceName1 + abc[0]).replace("${No}", "8"));
		waitForAndGetElement(ELEMENT_SPACE_POSITION_IN_MY_SPACE_LIST.replace("${space}", spaceName1 + abc[1]).replace("${No}", "9"));
		waitForAndGetElement(ELEMENT_SPACE_POSITION_IN_MY_SPACE_LIST.replace("${space}", spaceName1 + abc[2]).replace("${No}", "10"));
		
		info("Case 104139: Ordering of searched spaces");
		/*	- The list of searched spaces is displayed
			- The Last browsed spaces are displayed in the top of the list
			- Other spaces are ordered alphabetically*/ 
		type(ELEMENT_MY_SPACE_SEARCH_BOX, spaceName1, true);
		for (int i = 3; i < 10; i ++){
			waitForAndGetElement(ELEMENT_SPACE_POSITION_IN_MY_SPACE_LIST.replace("${space}", spaceName1 + abc[10 - i]));
		}
		waitForAndGetElement(ELEMENT_SPACE_POSITION_IN_MY_SPACE_LIST.replace("${space}", spaceName1 + abc[0]).replace("${No}", "8"));
		waitForAndGetElement(ELEMENT_SPACE_POSITION_IN_MY_SPACE_LIST.replace("${space}", spaceName1 + abc[1]).replace("${No}", "9"));
		waitForAndGetElement(ELEMENT_SPACE_POSITION_IN_MY_SPACE_LIST.replace("${space}", spaceName1 + abc[2]).replace("${No}", "10"));
				
		acc.signOut();
		acc.signIn(DATA_USER1, DATA_PASS);
		nav.goToUsersAndGroupsManagement();
		userMag.searchUser(user1, "User Name");
		userMag.deleteUser(user1);
		userMag.searchUser(user2, "User Name");
		userMag.deleteUser(user2);
 	}

	/**
	*<li> Case ID:104135.</li>
	*<li> Test Case Name: Display "My SPACES" with empty list.</li>
	*<li> Pre-Condition: no spaces exist</li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by lientm at 2014/05/13 10:21:08</li>
	*/
	@Test
	public void test08_DisplayMySpaceWithEmptyList() {
		String user = "test104135";
		String password = "123456";
		
		info("Case 104135: Display My SPACES with empty list");
		/*Step Number: 1
		*Step Name: 
		*Step Description: 
			- Connect to Intranet
		*Input Data: 		
		*Expected Outcome: 
			- The Left Navigation is displayed
			- The "MY SPACES" panel is displayed
			- A link "Join a space" is displayed in the panel*/ 
		info("create new user to test");
		nav.goToNewStaff();
		account.addNewUserAccount(user, password, password, "test", "test", user, user + "@gmail.com", null, null, true);
		acc.signOut();	
		acc.signIn(user, password);
		waitForAndGetElement(ELEMENT_MY_SPACE_PORTLET);
		waitForAndGetElement(ELEMENT_JOIN_SPACE_LINK_ON_MY_SPACE);
		waitForElementNotPresent(ELEMENT_SPACE_LINE_ON_MY_SPACE);
		
		info("Delete data");
		acc.signOut();
		acc.signIn(DATA_USER1, DATA_PASS);
		nav.goToUsersAndGroupsManagement();
		userMag.searchUser(user, "User Name");
		userMag.deleteUser(user);
 	}

	/**
	*<li> Case ID:104136 -> Test Case Name: Search space in "MY SPACES".</li>
	*<li> Case ID:104137 -> Test Case Name: Clear a previous Search space in "MY SPACES".</li>
	*<li> Case ID:104138 -> Test Case Name: Click outside of the Search box in MY SPACES</li>
	*<li> Case ID:104140 -> Test Case Name: Display "No space found" in "MY SPACES".</li>
	*/
	@Test
	public void test09_10_11_12_SearchSpaceInMySpace() {
		String space1 = "abcdf104136";
		String space2 = "fghika104136";
		String space3 = "lmnop104136";
		String notfound = "xyz104140";
		
		space.goToMySpacePage();
		space.addNewSpace(space1, "description", "Visible", "Open", "", "", 300000);
		waitForAndGetElement(ELEMENT_SPACE_IN_TOP_MY_SPACE_LIST.replace("${space}", space1));

		space.goToMySpacePage();
		space.addNewSpace(space2, "description", "Visible", "Open", "", "", 300000);
		waitForAndGetElement(ELEMENT_SPACE_IN_TOP_MY_SPACE_LIST.replace("${space}", space2));

		space.goToMySpacePage();
		space.addNewSpace(space3, "description", "Visible", "Open", "", "", 300000);
		waitForAndGetElement(ELEMENT_SPACE_IN_TOP_MY_SPACE_LIST.replace("${space}", space3));
		
		info("Case 104136: Search space in MY SPACES");
		waitForAndGetElement(ELEMENT_MY_SPACE_SEARCH_BOX);
		type(ELEMENT_MY_SPACE_SEARCH_BOX, "a", true);
		waitForAndGetElement(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", space1));
		waitForAndGetElement(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", space2));
		waitForElementNotPresent(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", space3));
		
		type(ELEMENT_MY_SPACE_SEARCH_BOX, "b", false);
		waitForAndGetElement(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", space1));
		waitForElementNotPresent(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", space2));
		waitForElementNotPresent(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", space3));
		
		info("Case 104138: Click outside of the Search box in MY SPACES");
		click(ELEMENT_SPACE_NAVIGATION_ON_MY_SPACE);
		waitForAndGetElement(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", space1));
		waitForElementNotPresent(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", space2));
		waitForElementNotPresent(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", space3));
		
		info("Case 104137: Clear a previous Search space in MY SPACES");
		type(ELEMENT_MY_SPACE_SEARCH_BOX, " ", true);
		waitForAndGetElement(ELEMENT_MY_SPACE_SEARCH_BOX).clear();
		waitForAndGetElement(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", space1));
		waitForAndGetElement(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", space2));
		waitForAndGetElement(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", space3));
		
		info("Case 104140: Display No space found in MY SPACES");
		type(ELEMENT_MY_SPACE_SEARCH_BOX, notfound, true);
		waitForAndGetElement(ELEMENT_MY_SPACE_NO_FOUND_LABEL);
		
		info("Delete data");
		space.goToMySpacePage();
		space.deleteSpace(space1, 300000);
		space.deleteSpace(space2, 300000);
		space.deleteSpace(space3, 300000);
 	}

	/**
	*<li> Case ID:104142.</li>
	*<li> Test Case Name: Show an UI hover under items in "MY SPACES" list.</li>
	*<li> Pre-Condition: </li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by lientm at 2014/05/13 10:21:08</li>
	*/
	@Test
	public void test13_ShowAnUIHoverUnderItemsInMySpaceList() {
		String spaceName = "space104142";
		
		info("Case 104142: Show an UI hover under items in MY SPACES list");
		/*  - Move the mouse over each items
			- An UI hover is displayed under the item with the space's fullname*/ 
		space.goToMySpacePage();
		space.addNewSpace(spaceName, "", "Visible", "Open", "", "", 300000);
		waitForAndGetElement(ELEMENT_MY_SPACE_PORTLET);
		waitForAndGetElement(ELEMENT_SPACE_IN_TOP_MY_SPACE_LIST.replace("${space}", spaceName));
		
		info("When mouse over space, UI hover is displayed with full space name");
		mouseOver(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", spaceName), true);
		waitForAndGetElement(ELEMENT_SPACE_TOOL_TIP.replace("${space}", spaceName));
		
		info("Delete data");
		space.goToMySpacePage();
		space.deleteSpace(spaceName, 300000);
 	}

	/**
	*<li> Case ID:104143.</li>
	*<li> Test Case Name: Show a selected item in "MY SPACES" list.</li>
	*<li> Pre-Condition: </li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by lientm at 2014/05/13 10:21:08</li>
	*/
	@Test (groups = "pending")
	public void test14_ShowASelectedItemInMYSPACESList() {
		info("Test 15 Show a selected item in MY SPACES list");
		/*Step Number: 1
		*Step Name: 
		*Step Description: 
			- Connect to Intranet
		*Input Data: 
			
		*Expected Outcome: 
			- The left Navigation is displayed
			- The "MY SPACES" panel is displayed with list of spaces*/

		/*Step number: 2
		*Step Name: 
		*Step Description: 
			- Select a space from the list
		*Input Data: 
			
		*Expected Outcome: 
			- The space item is displayed with another style*/ 

 	}

	/**
	*<li> Case ID:104144.</li>
	*<li> Test Case Name: Show "Join a space" item in "MY SPACES" list.</li>
	*<li> Pre-Condition: </li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by lientm at 2014/05/13 10:21:08</li>
	*/
	@Test
	public void test15_ShowJoinASpaceItemInMySpaceList() {
		info("Case 104144: Show Join a space item in MY SPACES list");
		/*	- The item "Join a Space" is displayed in the bottom of the list
			- Click on "Join a Space", the "All Spaces" page is displayed*/ 
		click(ELEMENT_JOIN_SPACE_LINK_ON_MY_SPACE);
		waitForAndGetElement(ELEMENT_ALL_SPACE_LINK);
 	}

	/**
	*<li> Case ID:104145.</li>
	*<li> Test Case Name: Display a space with a long name in "MY SPACES" list.</li>
	*<li> Pre-Condition: </li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by lientm at 2014/05/13 10:21:08</li>
	*/
	@Test (groups = "pending")
	public void test16_DisplayASpaceWithALongNameInMySpaceList() {
		info("Test 17 Display a space with a long name in MY SPACES list");
		/*Step Number: 1
		*Step Name: 
		*Step Description: 
			- Create a space with long name, eg with 27characters
		*Input Data: 
			
		*Expected Outcome: 
			Space is created successfully*/

		/*Step number: 2
		*Step Name: 
		*Step Description: 
			- Go to Intranet home page
		*Input Data: 
			
		*Expected Outcome: 
			- The left Navigation is displayed
			- The "MY SPACES" panel is displayed with list of spaces
			- The space's name is truncated and appended "...."*/ 

 	}

	/**
	*<li> Case ID: 104146 -> Open a space in the currently opened application.</li>
	*<li> Case ID: 104147 -> Open a space in the Activity Stream
	*/
	@Test
	public void test17_18_OpenASpaceInOpenedApplication() {
		String spaceName1 = "space1041461";
		String spaceName2 = "space1041462";
		
		space.goToMySpacePage();
		space.addNewSpace(spaceName1, "", "Visible", "Open", "", "", 300000);
		space.goToMySpacePage();
		space.addNewSpace(spaceName2, "", "Visible", "Open", "", "", 300000);
		
		info("Case 104146: Open a space in the currently opened application");
		/*	- Open space 1, open documents tab
			- Open space 2, documents tab is displayed */
		click(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", spaceName1));
		waitForAndGetElement(space.ELEMENT_SPACE_CURRENT_NAME.replace("${spaceName}", spaceName1));
		click(By.id("documents"));
		waitForAndGetElement(space.ELEMENT_SPACE_DOCUMENTS_PORTLET);
		click(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", spaceName2));
		waitForAndGetElement(space.ELEMENT_SPACE_CURRENT_NAME.replace("${spaceName}", spaceName2));
		waitForAndGetElement(space.ELEMENT_SPACE_DOCUMENTS_PORTLET);
		
		info("Case 104147: Open a space in the Activity Stream");
		/*	- Delete documents tab in space 2
		 	- Open space 1/documents
		 	- Open space 2 -> activity stream is displayed */
		space.goToSpaceMenu("Space Settings");
		space.deleteSpaceMenu("Documents");
		click(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", spaceName1));
		click(By.id("documents"));
		waitForAndGetElement(space.ELEMENT_SPACE_DOCUMENTS_PORTLET);
		click(ELEMENT_SPACE_IN_MY_SPACE_LIST.replace("${space}", spaceName2));
		waitForElementNotPresent(space.ELEMENT_SPACE_DOCUMENTS_PORTLET);
		waitForAndGetElement(space.ELEMENT_SPACE_ACTIVITY_STREAM_PORTLET);
		
		info("Delete data");
		space.goToMySpacePage();
		space.deleteSpace(spaceName1, 300000);
		space.deleteSpace(spaceName2, 300000);
 	}

	/**
	*<li> Case ID:104162.</li>
	*<li> Test Case Name: Text on search box is selected when focused on search component.</li>
	*<li> Pre-Condition: spaces exists</li>
	*<li> Post-Condition: </li>
	*<li> Done with OSs and browsers : </li>
	*<li> Generated by lientm at 2014/05/13 10:21:08</li>
	*/
	@Test (groups = "pending")
	public void test19_TextOnSearchBoxIsSelectedWhenFocusedOnSearchComponent() {
		info("Test 20 Text on search box is selected when focused on search component");
		/*Step Number: 1
		*Step Name: 
		*Step Description: 
			- Connect to Intranet
		*Input Data: 
			
		*Expected Outcome: 
			- The Left Navigation is displayed
			- The "MY SPACES" panel is displayed
			- Search filter is displayed*/

		/*Step number: 2
		*Step Name: 
		*Step Description: 
			- Input a letter "a" in the search box
		*Input Data: 
			
		*Expected Outcome: 
			- All spaces starting or having a word starting with the inputed letter are displayed*/

		/*Step number: 3
		*Step Name: 
		*Step Description: 
			- Click outside search box
			- Click on Search box
		*Input Data: 
			
		*Expected Outcome: 
			The text "a" is selected*/ 

 	}
	
	/**
	 * Case 104131: Display button See XX More Spaces in MY SPACES
	 */
	@Test
	public void test20_DisplayButtonSeeXXMoreSpace(){
		String user = "test104131";
		String password = "123456";
		String spaceName3 = "space104131";
		
		info("create new user to test");
		nav.goToNewStaff();
		account.addNewUserAccount(user, password, password, "test", "test", user, user + "@gmail.com", null, null, true);
		acc.signOut();	
		acc.signIn(user, password);
		
		info("Case 104131: Display button See XX More Spaces in MY SPACES");
		/* Create 21 space
		  	- The number of spaces displayed is 10
			- The button "See 11 More Spaces" is displayed in the bottom of the list
			- Click "See 11 More Spaces" -> 20 space is displayed with vertical scroll bar, The button changed to "See 1 More Spaces" is displayed
		 */
		for (int i = 0; i < 21; i ++){
			addNewSpaceInMySpaceList(spaceName3 + i);
		}
		int count1 = driver.findElements(ELEMENT_SPACE_LINE_ON_MY_SPACE).size();
		assert count1 == 10;
		click(ELEMENT_SHOW_MORE_SPACE.replace("${No}", "11"));
		int count4 = driver.findElements(ELEMENT_SPACE_LINE_ON_MY_SPACE).size();
		assert count4 == 20;
		assert !checkExitScrollBarOnMySpace();
		waitForAndGetElement(ELEMENT_SHOW_MORE_SPACE.replace("${No}", "1"));
		
		info("Delete data");
		acc.signOut();
		acc.signIn(DATA_USER1, DATA_PASS);
		nav.goToUsersAndGroupsManagement();
		userMag.searchUser(user, "User Name");
		userMag.deleteUser(user);
	}
}